<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Calculator with JUnit5 and Cucumber tests"><sessioninfo id="christian-VivoBook-ASUSLaptop-X530FN-S530FN-95ce1978" start="1744743587701" dump="1744743591967"/><package name="calculator"><class name="calculator/Divides" sourcefilename="Divides.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lcalculator/Notation;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Lcalculator/values/NumericValue;Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(II)I" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/Times" sourcefilename="Times.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lcalculator/Notation;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Lcalculator/values/NumericValue;Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(II)I" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/Plus" sourcefilename="Plus.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lcalculator/Notation;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Lcalculator/values/NumericValue;Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(II)I" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/Expression" sourcefilename="Expression.java"/><class name="calculator/Application" sourcefilename="Application.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="calculator/IllegalConstruction" sourcefilename="IllegalConstruction.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/MyNumber" sourcefilename="MyNumber.java"><method name="getValue" desc="()Lcalculator/values/NumericValue;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcalculator/values/NumericValue;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lvisitor/Visitor;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countDepth" desc="()I" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countOps" desc="()I" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countNbs" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Lcalculator/Notation;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="98"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="122"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/Operation" sourcefilename="Operation.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lcalculator/Notation;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgs" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMoreParams" desc="(Ljava/util/List;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lvisitor/Visitor;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countDepth" desc="()I" line="116"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countOps" desc="()I" line="129"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countNbs" desc="()I" line="136"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Lcalculator/Notation;)Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="174"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="189"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="149"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/Minus" sourcefilename="Minus.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lcalculator/Notation;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Lcalculator/values/NumericValue;Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(II)I" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/Notation" sourcefilename="Notation.java"><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/Calculator" sourcefilename="Calculator.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Lcalculator/Expression;)V" line="40"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printExpressionDetails" desc="(Lcalculator/Expression;)V" line="51"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eval" desc="(Lcalculator/Expression;)Lcalculator/values/NumericValue;" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUseRadians" desc="(Z)V" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUseRadians" desc="()Z" line="84"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sin" desc="(D)D" line="88"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cos" desc="(D)D" line="95"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tan" desc="(D)D" line="102"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="16"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="5"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Application.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="4" ci="0" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Notation.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Times.java"><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MyNumber.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Calculator.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="16"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="5"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Expression.java"/><sourcefile name="Divides.java"><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Minus.java"><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Plus.java"><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IllegalConstruction.java"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Operation.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="2"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="2" ci="2" mb="1" cb="1"/><line nr="175" mi="0" ci="5" mb="0" cb="2"/><line nr="176" mi="0" ci="7" mb="0" cb="2"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="149"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="112" covered="317"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="34" covered="97"/><counter type="COMPLEXITY" missed="19" covered="44"/><counter type="METHOD" missed="15" covered="36"/><counter type="CLASS" missed="1" covered="9"/></package><package name="calculator/api/model"><class name="calculator/api/model/CalculatorModel" sourcefilename="CalculatorModel.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="CalculatorModel.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="calculator/util"><class name="calculator/util/AngleConverter" sourcefilename="AngleConverter.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="degreesToRadians" desc="(D)D" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="radiansToDegrees" desc="(D)D" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AngleConverter.java"><line nr="5" mi="2" ci="0" mb="0" cb="0"/><line nr="6" mi="5" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="calculator/values"><class name="calculator/values/NumericValue" sourcefilename="NumericValue.java"/><class name="calculator/values/RationalValue" sourcefilename="RationalValue.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;Ljava/math/BigInteger;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumerator" desc="()Ljava/math/BigInteger;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDenominator" desc="()Ljava/math/BigInteger;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="35"><counter type="INSTRUCTION" missed="74" covered="30"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="11" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="58"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="70"><counter type="INSTRUCTION" missed="74" covered="20"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="88"><counter type="INSTRUCTION" missed="74" covered="30"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="11" covered="4"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="8" covered="45"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueInt" desc="()I" line="132"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="137"><counter type="INSTRUCTION" missed="3" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="143"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="255" covered="224"/><counter type="BRANCH" missed="31" covered="15"/><counter type="LINE" missed="39" covered="35"/><counter type="COMPLEXITY" missed="22" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/values/ComplexValue" sourcefilename="ComplexValue.java"><method name="&lt;init&gt;" desc="(DD)V" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReal" desc="()Ljava/math/BigDecimal;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImag" desc="()Ljava/math/BigDecimal;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="30"><counter type="INSTRUCTION" missed="44" covered="24"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="44"><counter type="INSTRUCTION" missed="44" covered="24"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="58"><counter type="INSTRUCTION" missed="52" covered="36"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="72"><counter type="INSTRUCTION" missed="73" covered="65"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="9" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueInt" desc="()I" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="103"><counter type="INSTRUCTION" missed="3" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="109"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="218" covered="213"/><counter type="BRANCH" missed="27" covered="9"/><counter type="LINE" missed="25" covered="33"/><counter type="COMPLEXITY" missed="18" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/values/IntegerValue" sourcefilename="IntegerValue.java"><method name="&lt;init&gt;" desc="(I)V" line="8"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueInt" desc="()I" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="22"><counter type="INSTRUCTION" missed="8" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="36"><counter type="INSTRUCTION" missed="41" covered="15"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="48"><counter type="INSTRUCTION" missed="24" covered="32"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="60"><counter type="INSTRUCTION" missed="27" covered="49"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="82"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="93"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="102" covered="188"/><counter type="BRANCH" missed="14" covered="22"/><counter type="LINE" missed="11" covered="32"/><counter type="COMPLEXITY" missed="11" covered="17"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="calculator/values/RealValue" sourcefilename="RealValue.java"><method name="&lt;init&gt;" desc="(DI)V" line="10"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/math/BigDecimal;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecision" desc="()I" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="30"><counter type="INSTRUCTION" missed="77" covered="19"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="48"><counter type="INSTRUCTION" missed="77" covered="19"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="66"><counter type="INSTRUCTION" missed="77" covered="19"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcalculator/values/NumericValue;)Lcalculator/values/NumericValue;" line="84"><counter type="INSTRUCTION" missed="94" covered="31"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="13" covered="4"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueInt" desc="()I" line="112"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="117"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="122"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="330" covered="151"/><counter type="BRANCH" missed="34" covered="8"/><counter type="LINE" missed="47" covered="23"/><counter type="COMPLEXITY" missed="21" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ComplexValue.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="1" cb="1"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="2" cb="0"/><line nr="35" mi="11" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="2" cb="0"/><line nr="37" mi="13" ci="0" mb="0" cb="0"/><line nr="39" mi="8" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="1" cb="1"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="2" cb="0"/><line nr="49" mi="11" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="2" cb="0"/><line nr="51" mi="13" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="1" cb="1"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="60" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="2" cb="0"/><line nr="63" mi="14" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="2" cb="0"/><line nr="65" mi="18" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="1" cb="1"/><line nr="74" mi="0" ci="12" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="2"/><line nr="76" mi="0" ci="15" mb="0" cb="0"/><line nr="77" mi="0" ci="15" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="9" ci="0" mb="2" cb="0"/><line nr="82" mi="14" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="8" ci="0" mb="2" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="14" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="7" mb="1" cb="1"/><line nr="104" mi="1" ci="15" mb="2" cb="2"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="218" covered="213"/><counter type="BRANCH" missed="27" covered="9"/><counter type="LINE" missed="25" covered="33"/><counter type="COMPLEXITY" missed="18" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RationalValue.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="1" cb="1"/><line nr="13" mi="5" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="1" cb="1"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="1" cb="1"/><line nr="36" mi="0" ci="12" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="2" cb="0"/><line nr="41" mi="9" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="2" cb="0"/><line nr="44" mi="13" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="2" cb="0"/><line nr="49" mi="13" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="1" cb="1"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="9" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="1" cb="1"/><line nr="71" mi="0" ci="14" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="2" cb="0"/><line nr="73" mi="9" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="13" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="13" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="1" cb="1"/><line nr="89" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="14" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="2" cb="0"/><line nr="94" mi="9" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="13" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="100" mi="13" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="13" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="1" cb="1"/><line nr="115" mi="4" ci="3" mb="3" cb="1"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="7" mb="1" cb="1"/><line nr="138" mi="1" ci="15" mb="2" cb="2"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="255" covered="224"/><counter type="BRANCH" missed="31" covered="15"/><counter type="LINE" missed="39" covered="35"/><counter type="COMPLEXITY" missed="22" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RealValue.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="1" cb="1"/><line nr="31" mi="0" ci="13" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="2" cb="0"/><line nr="33" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="12" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="2" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="12" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="2" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="1" cb="1"/><line nr="49" mi="0" ci="13" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="2" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="12" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="2" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="12" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="1" cb="1"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="8" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="12" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="12" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="1" cb="1"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="13" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="2" cb="0"/><line nr="90" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="2" cb="0"/><line nr="93" mi="12" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="2" cb="0"/><line nr="95" mi="8" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="12" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="15" mb="2" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="330" covered="151"/><counter type="BRANCH" missed="34" covered="8"/><counter type="LINE" missed="47" covered="23"/><counter type="COMPLEXITY" missed="21" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumericValue.java"/><sourcefile name="IntegerValue.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="2"/><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="2"/><line nr="26" mi="0" ci="13" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="8" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="1" cb="1"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="2" cb="0"/><line nr="39" mi="13" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="2" cb="0"/><line nr="41" mi="11" ci="0" mb="0" cb="0"/><line nr="43" mi="8" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="2"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="3" ci="3" mb="1" cb="1"/><line nr="51" mi="13" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="1" cb="1"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="55" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="2"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="2"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="1" cb="1"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="5" ci="4" mb="1" cb="1"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="11" ci="0" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="2" ci="7" mb="2" cb="2"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="188"/><counter type="BRANCH" missed="14" covered="22"/><counter type="LINE" missed="11" covered="32"/><counter type="COMPLEXITY" missed="11" covered="17"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="905" covered="776"/><counter type="BRANCH" missed="106" covered="54"/><counter type="LINE" missed="122" covered="123"/><counter type="COMPLEXITY" missed="72" covered="54"/><counter type="METHOD" missed="3" covered="43"/><counter type="CLASS" missed="0" covered="4"/></package><package name="calculator/service"><class name="calculator/service/CalculatorService" sourcefilename="CalculatorService.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRep" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComplexRep" desc="(Ljava/lang/String;IIII)Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="21" covered="42"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="7" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRealRep" desc="(Ljava/lang/String;DD)Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="16" covered="43"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRationalRep" desc="(Ljava/lang/String;IIII)Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="16" covered="43"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFromDegreeToRadian" desc="(D)Ljava/lang/String;" line="198"><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFromRadianToDegree" desc="(D)Ljava/lang/String;" line="215"><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="230"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="23" covered="60"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CalculatorService.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="5"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="2" cb="3"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="1" cb="4"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="1" cb="4"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="230"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="23" covered="60"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="71" covered="230"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="23" covered="60"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></package><package name="calculator/api/controller"><class name="calculator/api/controller/CalculatorRestController" sourcefilename="CalculatorRestController.java"><method name="&lt;init&gt;" desc="(Lcalculator/service/CalculatorService;)V" line="17"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeComplexOperation" desc="(Ljava/lang/String;IIII)Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeRealOperation" desc="(Ljava/lang/String;DD)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeRationalOperation" desc="(Ljava/lang/String;IIII)Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertDegreeToRadian" desc="(D)Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertRadianToDegree" desc="(D)Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="CalculatorRestController.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="visitor"><class name="visitor/Evaluator" sourcefilename="Evaluator.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lcalculator/values/NumericValue;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcalculator/MyNumber;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcalculator/Operation;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="visitor/Visitor" sourcefilename="Visitor.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="visitor/PrintVisitor" sourcefilename="PrintVisitor.java"><method name="&lt;init&gt;" desc="(Lcalculator/Notation;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcalculator/MyNumber;)V" line="38"><counter type="INSTRUCTION" missed="27" covered="13"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcalculator/Operation;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="157"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="182"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="5" covered="47"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PrintVisitor.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="1" cb="1"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="2" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="1" cb="3"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="182"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="5" covered="47"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Visitor.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Evaluator.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="2"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="27" covered="247"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="5" covered="63"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="3"/></package><counter type="INSTRUCTION" missed="1173" covered="1576"/><counter type="BRANCH" missed="123" covered="107"/><counter type="LINE" missed="196" covered="345"/><counter type="COMPLEXITY" missed="108" covered="139"/><counter type="METHOD" missed="27" covered="98"/><counter type="CLASS" missed="3" covered="18"/></report>